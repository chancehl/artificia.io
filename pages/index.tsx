import type { GetStaticPropsContext, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'

import { S3Client, ListObjectsCommand } from '@aws-sdk/client-s3'

import styles from '../styles/Home.module.css'
import { getS3ObjectUrl } from '../utils/awsS3Utils'

type Collection = {
    title: string
    description: string
    objectUrls: string[]
}

type PageProps = {
    latestCollections: Collection[]
}

const Home: NextPage<PageProps> = ({ latestCollections }) => {
    return (
        <div className={styles.container}>
            <Head>
                <title>Artificia.io</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <header className={styles.header}>
                <h1>Artificia.io</h1>
            </header>

            <main className={styles.main}>
                {latestCollections.map((collection, key) => (
                    <div key={key}>
                        <h2>{collection.title}</h2>
                        <p>{collection.description ?? 'TODO'}</p>
                        {collection.objectUrls.map((object, key) => (
                            <Image key={key} src={object} alt="todo" height="512" width="512" />
                        ))}
                    </div>
                ))}
            </main>
        </div>
    )
}

export async function getStaticProps(context: GetStaticPropsContext) {
    const client = new S3Client({
        region: 'us-west-2',
        credentials: {
            accessKeyId: process.env.ACCESS_KEY_ID as string,
            secretAccessKey: process.env.SECRET_ACCESS_KEY as string,
        },
    })

    const data = await client.send(new ListObjectsCommand({ Bucket: 'artificia.io' }))

    const filteredObjects = data.Contents?.filter((object) => object.Key !== null && /\.(jpg|png)$/.test(object.Key ?? '')) ?? []

    let collectionMap: Record<string, string[]> = {}

    for (const object of filteredObjects) {
        const [group] = object.Key?.split('/') ?? []

        if (collectionMap[group]) {
            collectionMap[group] = [
                ...collectionMap[group],
                getS3ObjectUrl({
                    region: 'us-west-2',
                    bucket: 'artificia.io',
                    key: object.Key!,
                }),
            ]
        } else {
            collectionMap[group] = [
                getS3ObjectUrl({
                    region: 'us-west-2',
                    bucket: 'artificia.io',
                    key: object.Key!,
                }),
            ]
        }
    }

    return {
        props: {
            latestCollections: Object.keys(collectionMap).map((key) => ({ title: key, description: 'todo', objectUrls: collectionMap[key] })),
        }, // will be passed to the page component as props
    }
}

export default Home
